<VirtualHost *:80>
	# The ServerName directive sets the request scheme, hostname and port that
	# the server uses to identify itself. This is used when creating
	# redirection URLs. In the context of virtual hosts, the ServerName
	# specifies what hostname must appear in the request's Host: header to
	# match this virtual host. For the default virtual host (this file) this
	# value is not decisive as it is used as a last resort host regardless.
	# However, you must set it for any further virtual host explicitly.
	#ServerName www.example.com

	ServerAdmin webmaster@localhost
	DocumentRoot /var/www/html

	# Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
	# error, crit, alert, emerg.
	# It is also possible to configure the loglevel for particular
	# modules, e.g.
	#LogLevel info ssl:warn

	ErrorLog ${APACHE_LOG_DIR}/error.log
	CustomLog ${APACHE_LOG_DIR}/access.log combined

	# For most configuration files from conf-available/, which are
	# enabled or disabled at a global level, it is possible to
	# include a line for only one particular virtual host. For example the
	# following line enables the CGI configuration for this host only
	# after it has been globally disabled with "a2disconf".
	#Include conf-available/serve-cgi-bin.conf


	#<IfModule mod_rewrite.c>
	#	RewriteEngine on
	#	RewriteCond %{REQUEST_METHOD} ^TRACE
	#	RewriteRule .* - [F]
	#	RewriteCond %{HTTPS} off
	#	RewriteRule ^ https://%{HTTP_HOST}%{REQUEST_URI}
	#</IfModule>

	Redirect permanent / https://aquamer.ornl.gov/

	# for Django
	Alias /static /home/p6n/workplace/website/cyshg/static
	<Directory /home/p6n/workplace/website/cyshg/static>
		Require all granted
	</Directory>

	<Directory /home/p6n/workplace/website/cyshg>
		Require all granted
	</Directory>

	<Directory /home/p6n/workplace/website/cyshg/cyshg>
		<Files wsgi.py>
			Require all granted
		</Files>
	</Directory>

	#WSGIDaemonProcess cyshg python-path=/home/p6n/workplace/website/cyshg python-home=/home/p6n/anaconda2/bin
	#WSGIApplicationGroup %{GLOBAL} 
	#WSGIProcessGroup cyshg
	#WSGIScriptAlias / /home/p6n/workplace/website/cyshg/cyshg/wsgi.py

RewriteEngine on
RewriteCond %{SERVER_NAME} =aquamer.ornl.gov
RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]
</VirtualHost>

# vim: syntax=apache ts=4 sw=4 sts=4 sr noet

<VirtualHost *:443>
	# The ServerName directive sets the request scheme, hostname and port that
	# the server uses to identify itself. This is used when creating
	# redirection URLs. In the context of virtual hosts, the ServerName
	# specifies what hostname must appear in the request's Host: header to
	# match this virtual host. For the default virtual host (this file) this
	# value is not decisive as it is used as a last resort host regardless.
	# However, you must set it for any further virtual host explicitly.
	#ServerName www.example.com

	ServerAdmin webmaster@localhost
	DocumentRoot /var/www/html

	# Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
	# error, crit, alert, emerg.
	# It is also possible to configure the loglevel for particular
	# modules, e.g.
	#LogLevel info ssl:warn

	ErrorLog ${APACHE_LOG_DIR}/error.log
	CustomLog ${APACHE_LOG_DIR}/access.log combined

	# For most configuration files from conf-available/, which are
	# enabled or disabled at a global level, it is possible to
	# include a line for only one particular virtual host. For example the
	# following line enables the CGI configuration for this host only
	# after it has been globally disabled with "a2disconf".
	#Include conf-available/serve-cgi-bin.conf

        # for Django
        Alias /static /home/p6n/workplace/website/cyshg/static
        <Directory /home/p6n/workplace/website/cyshg/static>
                Require all granted
        </Directory>

        <Directory /home/p6n/workplace/website/cyshg>
                Require all granted
        </Directory>

        <Directory /home/p6n/workplace/website/cyshg/cyshg>
                <Files wsgi.py>
                        Require all granted
                </Files>
        </Directory>

	# cgi
	ScriptAlias /cgi/ /home/p6n/workplace/website/cyshg/scripts
	<Directory "/usr/lib/cgi-bin">
		AllowOverride None
		Options +ExecCGI -MultiViews +SymLinksIfOwnerMatch
		Order allow,deny
		Allow from all
		Options +ExecCGI
		AddHandler cgi-script .py
	</Directory>


        WSGIDaemonProcess cyshg python-path=/home/p6n/workplace/website/cyshg python-home=/home/p6n/anaconda2/bin
        WSGIApplicationGroup %{GLOBAL}
        WSGIProcessGroup cyshg
        WSGIScriptAlias / /home/p6n/workplace/website/cyshg/cyshg/wsgi.py


	SSLEngine on
	#SSLCertificateChainFile /path/to/intermediate_certificate

    	# Uncomment the following directive when using client certificate authentication
	SSLCACertificateFile      /etc/ssl/certs/ca-certificates.crt 


	Header   always set Strict-Transport-Security "max-age=63072000; includeSubdomains;"

	ServerName    aquamer.ornl.gov
	Include /etc/letsencrypt/options-ssl-apache.conf
SSLCertificateFile /etc/letsencrypt/live/aquamer.ornl.gov/fullchain.pem
SSLCertificateKeyFile /etc/letsencrypt/live/aquamer.ornl.gov/privkey.pem
</VirtualHost>

### Removed SSL config to be handled by ssl config file in apache --RAW

# vim: syntax=apache ts=4 sw=4 sts=4 sr noet

# intermediate configuration, tweak to your needs

#SSLProtocol             all -SSLv2 -SSLv3

#SSLCipherSuite HIGH:!3DES:!aNULL:!MD5:!SEED:!IDEA:!RC4:!RC4:!ARC4:!DES
#SSLHonorCipherOrder     on
#SSLCompression      off
#SSLSessionTickets   off

#Old cipher lists

#SSLCipherSuite          ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS
#SSLCipherSuite      ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
#SSLCipherSuite          ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS

