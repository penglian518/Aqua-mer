# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2018-02-05 21:40
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import gsolv.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GSolvJob',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('JobID', models.PositiveIntegerField(blank=True, default=0)),
                ('Name', models.CharField(blank=True, default='GSolv', max_length=50)),
                ('CurrentStep', models.CharField(blank=True, default='0', max_length=10)),
                ('CurrentStatus', models.CharField(choices=[('0', 'to be start'), ('1', 'running'), ('2', 'finished'), ('3', 'something wrong')], default='0', max_length=10)),
                ('Successful', models.BooleanField(default=False)),
                ('FailedReason', models.CharField(blank=True, default='', max_length=100)),
                ('CreatedDate', models.DateTimeField(default=datetime.datetime(2018, 2, 5, 16, 40, 8, 542907), verbose_name='date created')),
                ('SmilesStr', models.CharField(default='', max_length=200)),
                ('UploadedFile', models.FileField(upload_to=gsolv.models.user_directory_path)),
                ('UploadedFileType', models.CharField(choices=[('xyz', 'xyz'), ('pdb', 'pdb'), ('sdf', 'sdf'), ('mol2', 'mol2')], default='', max_length=10)),
                ('QMSoftware', models.CharField(choices=[('Gaussian', 'Gaussian'), ('NWChem', 'NWChem')], default='Gaussian', max_length=30)),
                ('QMTitle', models.CharField(blank=True, default='Title', max_length=100)),
                ('QMCalType', models.CharField(choices=[('Single Point Energy', 'Single Point Energy'), ('Geometry Optimization', 'Geometry Optimization'), ('Frequencies', 'Frequencies')], default='Geometry Optimization', max_length=30)),
                ('QMProcessors', models.PositiveIntegerField(blank=True, default=1)),
                ('QMMemory', models.PositiveIntegerField(blank=True, default=1)),
                ('QMFunctional', models.CharField(choices=[('MO6-2X', 'M06-2X'), ('MO6-L', 'M06-L'), ('B3LYP', 'B3LYP'), ('HF', 'HF')], default='MO6-2X', max_length=30)),
                ('QMBasisSet', models.CharField(choices=[('6-31+G(d,p)', '6-31+G(d,p)'), ('6-31+G(d)', '6-31+G(d)')], default='6-31+G(d,p)', max_length=30)),
                ('QMCharge', models.IntegerField(blank=True, default=0)),
                ('QMMultiplicity', models.IntegerField(blank=True, default=1)),
                ('QMCoordinateFormat', models.CharField(choices=[('Cartesian', 'Cartesian'), ('Z-Matrix', 'Z-Matrix')], default='Cartesian', max_length=30)),
                ('QMSolvationModel', models.CharField(choices=[('SMD', 'SMD')], default='SMD', max_length=30)),
                ('QMSolvent', models.CharField(choices=[('water', 'water')], default='water', max_length=30)),
                ('QMCavitySurface', models.CharField(choices=[('VDW', 'VDW'), ('SAS', 'SAS'), ('SES', 'SES')], default='SAS', max_length=30)),
                ('QMScalingFactor', models.DecimalField(decimal_places=3, default=0.485, max_digits=5)),
                ('Note', models.CharField(blank=True, default='', max_length=100)),
            ],
        ),
    ]
